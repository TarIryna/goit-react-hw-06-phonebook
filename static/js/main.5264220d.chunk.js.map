{"version":3,"sources":["components/FilterInput/FilterInput.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","components/Form/Form.js","components/Container/Container.js","components/Phonebook/Contact.js","components/Phonebook/Phonebook.js","components/FilterInput/FilterInput.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","connect","items","contacts","dispatch","onSubmit","contactsActions","useState","setName","setNumber","onChangeInput","e","currentTarget","value","reset","className","s","form","preventDefault","findName","find","contact","Notiflix","Notify","failure","labels","input","type","onChange","pattern","title","required","button","Container","children","Contact","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contactList","map","label","App","createReducer","actions","state","_","combineReducers","ContactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5264220d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterInput_filter__2gqem\",\"input\":\"FilterInput_input__2m243\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3m6cZ\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\r\nimport s from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport Notiflix from 'notiflix';\r\n\r\nconst Form = ({ onSubmit, items }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    const findName = items.find(contact => contact.name === name);\r\n    if (findName) {\r\n      Notiflix.Notify.failure(`${findName.name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <div className={s.labels}>\r\n        <label className={s.name}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label className={s.name}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={onChangeInput}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={s.button} type=\"submit\" key=\"submitBtn\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  items,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.Container}>{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Phonebook.module.css';\r\n\r\nexport default function Contact({ name, number, onClick }) {\r\n  return (\r\n    <>\r\n      {name}: <span className={s.number}> {number} </span>\r\n      <button className={s.button} type=\"button\" onClick={onClick}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport s from './Phonebook.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Phonebook = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.name} key={id}>\r\n          <Contact name={name} number={number} onClick={() => deleteContact(id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\r\nimport s from './FilterInput.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst FilterInput = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={e => changeFilter(e.currentTarget.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  filter: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: value => dispatch(contactsActions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInput);\r\n","// import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Container from './components/Container';\nimport Phonebook from './components/Phonebook';\nimport FilterInput from './components/FilterInput';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1> Phonebook </h1>\n      <Form />\n      <h2> Contacts </h2>\n      <FilterInput />\n      <Phonebook />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst ContactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(ContactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1GUXa\",\"labels\":\"Form_labels__1kwW_\",\"name\":\"Form_name__uLeq2\",\"input\":\"Form_input__1Uk5D\",\"button\":\"Form_button__3k-L4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Phonebook_name__2A6Yg\",\"contactList\":\"Phonebook_contactList__9k1Da\",\"number\":\"Phonebook_number__1yTd5\",\"button\":\"Phonebook_button__2tlSh\"};"],"sourceRoot":""}