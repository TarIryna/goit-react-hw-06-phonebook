{"version":3,"sources":["components/FilterInput/FilterInput.module.css","components/Container/Container.module.css","components/Form/Form.module.css","redux/contacts/contacts-action-types.js","redux/contacts/contacts-actions.js","components/Form/Form.js","components/Container/Container.js","components/Phonebook/Contact.js","components/Phonebook/Phonebook.js","components/FilterInput/FilterInput.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","name","number","type","types","payload","id","shortid","generate","contactId","value","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","onChangeInput","e","currentTarget","reset","className","s","form","preventDefault","labels","input","onChange","pattern","title","required","button","Container","children","Contact","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","deleteContact","contactList","map","changeFilter","label","App","combineReducers","state","JSON","parse","localStorage","getItem","findName","find","Notiflix","Notify","failure","setItem","stringify","sort","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.854dae6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterInput_filter__2gqem\",\"input\":\"FilterInput_input__2m243\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3m6cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1GUXa\",\"labels\":\"Form_labels__1kwW_\",\"name\":\"Form_name__uLeq2\",\"input\":\"Form_input__1Uk5D\",\"button\":\"Form_button__3k-L4\"};","// eslint-disable-next-line\r\nexport default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  CHANGE_FILTER: 'contacts/changeFilter',\r\n};\r\n","import types from './contacts-action-types';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\r\nimport s from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <div className={s.labels}>\r\n        <label className={s.name}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChangeInput}\r\n          />\r\n        </label>\r\n        <label className={s.name}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={onChangeInput}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={s.button} type=\"submit\" key=\"submitBtn\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.Container}>{children}</div>;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Phonebook.module.css';\r\n\r\nexport default function Contact({ name, number, onClick }) {\r\n  return (\r\n    <>\r\n      {name}: <span className={s.number}> {number} </span>\r\n      <button className={s.button} type=\"button\" onClick={onClick}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport s from './Phonebook.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Phonebook = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.name} key={id}>\r\n          <Contact name={name} number={number} onClick={() => deleteContact(id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\r\nimport s from './FilterInput.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst FilterInput = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={e => changeFilter(e.currentTarget.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  filter: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: value => dispatch(contactsActions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterInput);\r\n","// import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Container from './components/Container';\nimport Phonebook from './components/Phonebook';\nimport FilterInput from './components/FilterInput';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1> Phonebook </h1>\n      <Form />\n      <h2> Contacts </h2>\n      <FilterInput />\n      <Phonebook />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport types from './contacts-action-types';\r\nimport Notiflix from 'notiflix';\r\n\r\nconst items = (state = JSON.parse(localStorage.getItem('contacts')), { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD: {\r\n      const findName = state.find(contact => contact.name === payload.name);\r\n      if (findName) {\r\n        Notiflix.Notify.failure(`${findName.name} is already in contacts`);\r\n        return state;\r\n      }\r\n      localStorage.setItem('contacts', JSON.stringify([...state, payload].sort()));\r\n      return [...state, payload].sort();\r\n    }\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers, createStore } from 'redux';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Phonebook_name__2A6Yg\",\"contactList\":\"Phonebook_contactList__9k1Da\",\"number\":\"Phonebook_number__1yTd5\",\"button\":\"Phonebook_button__2tlSh\"};"],"sourceRoot":""}